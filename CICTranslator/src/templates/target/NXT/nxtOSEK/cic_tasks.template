typedef enum {Computational, Control} TASK_TYPE;
typedef enum {DataDriven, TimeDriven, ControlDriven} TASK_DRIVEN_TYPE;
typedef enum {Run, Stop, Wait} TASK_STATE;
typedef enum {Running, ReadBlock, WriteBlock, None} TASK_RUN_STATE;
typedef enum {H, M, S, MS, US, CYCLE, COUNT} PERIOD_MATRIC;

typedef struct {
    int task_id;
    char* name;
    TASK_TYPE task_type;

    TASK_DRIVEN_TYPE driven_type;
    TASK_STATE state;
    TASK_RUN_STATE run_state;
    PERIOD_MATRIC p_metric;

    unsigned int run_rate;
    unsigned int period;
    unsigned int globalPeriod;
    unsigned int run_count;

    bool hasMTM;
    bool hasSubgraph;

    bool isChildtask;
    int parent_task_id;

    MUTEX_TYPE p_mutex;
    COND_TYPE p_cond;

} TASK;

typedef struct{
    int task_id;
} MTM;