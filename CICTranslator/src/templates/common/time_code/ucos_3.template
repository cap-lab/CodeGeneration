##GET_CURRENT_TIME_BASE_START
unsigned int get_current_time_base(){
    unsigned int time = 0;
    OS_ERR err;
    time = OSTimeGet(&err);
    return time;
}
##GET_CURRENT_TIME_BASE_END

##CHANGE_TIME_UNIT_START
unsigned int change_time_unit(unsigned int time_value, char *time_unit){
        OS_TICK  tick = 0;
        OS_RATE_HZ tick_rate = OSCfg_TickRate_Hz;
        if(STRING_COMPARE(time_unit, "S") == 0){
          tick = (OS_TICK)time_value * tick_rate / (OS_TICK)1000u;
        }
        else if(STRING_COMPARE(time_unit, "MS") == 0){
          tick = (tick_rate * ((OS_TICK)time_value + (OS_TICK)500u / tick_rate)) / (OS_TICK)1000u;
        }
        else tick = time_value;
        
        return (unsigned int)tick;
}
##CHANGE_TIME_UNIT_END