##RECEIVER_SPECIFIC_START
unsigned char re_buf[1024]= {0,};
THREAD_FUNC_RET_TYPE SMReceiverRoutine(THREAD_FUNC_ARG_TYPE pdata){
    unsigned char size; 
    int index, i;
    while(1)
    {                
        for (index = 0; index < NUM_SHARED_CONNECTION; index++)
        {
            if(SHM_AVAILABLE() > 0)
            {
                SHM_RECEIVE(&size, sizeof(unsigned char));
                SHM_RECEIVE(re_buf, size);
            }             
            else
            {
                sleep(1);
                continue;
            }         
                                
            int lib_or_ch = (int)re_buf[0]; //because of int32_t
            unsigned char* data = &re_buf[8];
    

            if(lib_or_ch == CON_NOR_CHANNEL)
            {
                int channel_id = (int)re_buf[4]; //because of int32_t
                
                int channel_index = get_channel_index(channel_id);
                if(channels[channel_index].type == CHANNEL_TYPE_NORMAL)
                {
                    int mq_length = size-(2*sizeof(int32_t));
                   	MQ_SEND(channel_index, data, mq_length);
                }
                else if(channels[channel_index].type == CHANNEL_TYPE_BUFFER)
                {
	                int mq_length = size-(2*sizeof(int32_t));
	                BUF_SEND(channel_index, data, mq_length);
                }
                else if(channels[channel_index].type == CHANNEL_TYPE_ARRAY_CHANNEL)
                {
                    ;//??
                }
                else
                {
                    ;//Error handling code
                }
            }
            else if(lib_or_ch == CON_LIB_CHANNEL)
            {                        
                int lib_channel_id = (int)re_buf[4];

                for(i=0; i<num_libchannels; i++)
                {                    
                    if(lib_channels[i].channel_id == lib_channel_id && lib_channels[i].op == 'r')
                    {
                        LIB_SEND(i, (unsigned char*)re_buf+8, lib_channels[i].sampleSize);
                        break;
                    }
                }
            }                       
            else
            {
                ;
                // Error handling code
            }
            
        }        
    }
}
##RECEIVER_SPECIFIC_END

##SENDER_SPECIFIC_START
				if(connMap[index].conn_type == SHARED_CONN)
				{							
				    SHM_SEND(&size, sizeof(unsigned char));
				    SHM_SEND(buf, size);                            
				}
##SENDER_SPECIFIC_END

##BOOL_SPECIFIC_START
	bool sh_con = false;
##BOOL_SPECIFIC_END

##CREATE_SPECIFIC_RECEIVER_START
		if(sh_con == false && connMap[i].conn_type == SHARED_CONN)
		{
		    sh_con = true; 
		    SMInit();
			THREAD_CREATE(&outCommThread[i], SMReceiverRoutine, NULL);  // because 0 get Sender, and then receiver #1, receiver #2, .. 
		}
##CREATE_SPECIFIC_RECEIVER_END
    